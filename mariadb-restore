#!/usr/bin/env bash

usage() {
  echo "Usage: $0 <Backup dir from mariadb-backup>"
  exit 1
}

TARGET_DIR="$1"
if [ -z "$TARGET_DIR" ]; then
  usage
fi

PATH=/bin:/usr/bin
export PATH

ID=$(docker ps --filter "label=MYSQL=mariadb" --format "{{.ID}}")
if [ -z "$ID" ]; then
  echo "MariaDB container not found"
  exit 1
fi

docker exec -i $ID mariabackup --prepare --target-dir="${TARGET_DIR}"
if [ $? -ne 0 ]; then
  echo "Fatal: mariabackup --prepare --target-dir="${TARGET_DIR}" failed"
  exit 2
fi

docker compose down

docker exec -i $ID mariabackup --copy-back --target-dir="${TARGET_DIR}"

if [ $? -eq 0 ]; then
  cd "${TARGET_DIR}" || exit 1
  tar cvJf my_backup.bak.${NOW}.xz "${TMPFILE}"
  if [ ! -z "$GPG_KEYID" ]; then
    gpg --trust-model always --encrypt --recipient ${GPG_KEYID} > "my_backup.bak.${NOW}.gpg" < "my_backup.bak.${NOW}.xz"
    if [ $? -ne 0 ]; then
      echo "Encryption failed"
      exit 1
    fi
    rm -rf "my_backup.bak.${NOW}.xz"
  fi
  rm -rf "${TMPNAME}"
else
  rm -f $TMPNAME
  echo "backup failed"
fi

# clean up
cd "$TARGET_DIR" || exit 1
find . -mtime +${MAX_DAYS} -exec rm -f "{}" \;

# If exists, call storage script
# rsync -e "ssh -p 23" /backup/cfadm/postgres/pg_backup.bak.20201229.* u252190@u252190.your-storagebox.de:
if [ -x ./store-backup ]; then
  ./store-backup "${FINAL_PATH}"
fi

